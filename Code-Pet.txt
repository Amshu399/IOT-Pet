#define BLYNK_PRINT Serial
#include <WiFi.h>
#include <BlynkSimpleEsp32.h>
#include <Servo_ESP32.h>

int PIR = 16;

static const int servoPin = 18; // printed G14 on the board
Servo_ESP32 servo1;

int angle = 0;
int angleStep = 4;

int angleMin = 0;
int angleMax = 180;

char auth[] = "16ULzwJOCtTRWKESvG0d3Ijk6IOs0Eci";
char ssid[] = "Galaxy";
char pass[] = "1234Nagu@";

WidgetTerminal terminal(V10);
WidgetLCD lcd(V1);

int NM = 0;

void setup() {
  Serial.begin(115200);
  Blynk.begin(auth, ssid, pass, IPAddress(117, 236, 190, 213), 8080);
  pinMode(PIR, INPUT);

  // Initialize the servo motor
  servo1.attach(servoPin);
}

void loop() {
  Blynk.run();
  int irvalue = digitalRead(PIR);
  Serial.println(irvalue);

  if (irvalue == HIGH) {
    terminal.println("PRESENT!\n");
    Blynk.virtualWrite(V1, "PRESENT!\n");
    //spin(); // Call spin function when motion is detected
    
    delayMicroseconds(10); // Increased delay for stability
    
  } else {
    terminal.println("NOT PRESENT!\n");
    Blynk.virtualWrite(V1, "NOT PRESENT!\n");
  }
}


BLYNK_WRITE(V5) {
  NM = param.asInt();
  //terminal.println(NM); // Update NM variable when V5 is written
  spin(); // Call spin function when motion is detected
    
}

void spin() {
   if (NM == 1)
   {
      for (int angle = 0; angle <= angleMax; angle += angleStep)
       {
            servo1.write(angle);
            delay(40);
        }
        
        delay(4000);
  for (int angle = 180; angle >= angleMin; angle -= angleStep) {
    servo1.write(angle);
    delay(40);
  }

  delay(300); // Adjust delay based on your requirements
}
}
